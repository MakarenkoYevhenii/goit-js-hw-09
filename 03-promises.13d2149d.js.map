{"version":3,"sources":["js/03-promises.js"],"names":["userDelayEl","document","querySelector","userStepEl","userAmountEl","btnCreatePromisesEl","form","promiseClick","event","preventDefault","firstDelay","Number","value","delayStep","amount","i","createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","console","log","catch","addEventListener"],"mappings":";AAAA,MAAMA,EAAcC,SAASC,cAAc,uBACrCC,EAAaF,SAASC,cAAc,sBACpCE,EAAeH,SAASC,cAAc,wBACtCG,EAAsBJ,SAASC,cAAc,cAC7CI,EAAOL,SAASC,cAAc,SAQpC,SAASK,EAAcC,GACrBA,EAAMC,iBACFC,IAAAA,EAAaC,OAAOX,EAAYY,OAChCC,EAAYF,OAAOR,EAAWS,OAC9BE,EAASH,OAAOP,EAAaQ,OAC9B,IAAA,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,GAAG,EAC9BC,EAAcD,EAAGL,GACjBA,GAAcG,EAMhB,SAASG,EAAcC,EAAUC,GACf,IAAIC,QAAQ,CAACC,EAASC,KAC9BC,MAAAA,EAAgBC,KAAKC,SAAW,GAC1CC,WAAW,KACHH,EACFF,EAAQ,CAAEH,SAAAA,EAAUC,MAAAA,IAEpBG,EAAO,CAAEJ,SAAAA,EAAUC,MAAAA,KAEpBA,KAGFQ,KAAK,EAAGT,SAAAA,EAAUC,MAAAA,MACjBS,QAAQC,yBAAyBX,QAAeC,SAEjDW,MAAM,EAAGZ,SAAAA,EAAUC,MAAAA,MAClBS,QAAQC,wBAAwBX,QAAeC,SAlCnDZ,EAAKwB,iBAAiB,QAASvB","file":"03-promises.13d2149d.js","sourceRoot":"../src","sourcesContent":["const userDelayEl = document.querySelector('input[name=\"delay\"]');\nconst userStepEl = document.querySelector('input[name=\"step\"]');\nconst userAmountEl = document.querySelector('input[name=\"amount\"]');\nconst btnCreatePromisesEl = document.querySelector('.submit-js');\nconst form = document.querySelector('.form');\n\n\nform.addEventListener('click', promiseClick);\n\n\n\n\nfunction promiseClick (event) {\n  event.preventDefault();\n  let firstDelay = Number(userDelayEl.value);\n  let delayStep = Number(userStepEl.value);\n  let amount = Number(userAmountEl.value);\nfor (let i = 1; i <= amount; i+=1) {\n  createPromise(i, firstDelay);\n  firstDelay += delayStep;\n}\n};\n\n\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\nsetTimeout(() => {\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  }, delay)\n  });\n  promise\n  .then(({ position, delay }) => {\n    console.log(`Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`Rejected promise ${position} in ${delay}ms`);\n  });\n};\n"]}